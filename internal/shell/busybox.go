package shell

import (
	"context"
	"sort"

	"mvdan.cc/sh/v3/expand"
	"mvdan.cc/sh/v3/interp"
)

const busyboxCmd = "busybox"

func busyBoxHandler(dir string, env expand.Environ) func(next interp.ExecHandlerFunc) interp.ExecHandlerFunc {
	cmd, err := interp.LookPathDir(dir, env, busyboxCmd)
	if err != nil {
		return func(next interp.ExecHandlerFunc) interp.ExecHandlerFunc {
			return func(ctx context.Context, args []string) error {
				return next(ctx, args)
			}
		}
	}

	return func(next interp.ExecHandlerFunc) interp.ExecHandlerFunc {
		return func(ctx context.Context, args []string) error {
			applet := args[0]

			idx := sort.SearchStrings(applets, applet)
			if idx >= len(applets) || applets[idx] != applet {
				return next(ctx, args)
			}

			argsMod := make([]string, len(args)+1)
			argsMod[0] = cmd
			copy(argsMod[1:], args)

			return next(ctx, argsMod)
		}
	}
}

//go:generate busybox sh -c "(echo '// Code generated by busybox.go; DO NOT EDIT.\n\npackage shell\n\nvar applets = []string{'; busybox --list | busybox sed -e 's/^/\\t\"/g' -e 's/$/\",/g'; echo '}') > busybox_gen.go"
